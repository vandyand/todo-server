{"version":3,"sources":["components/ListForm.js","components/ItemForm.js","components/Modal.js","components/Lists.js","components/Item.js","components/List.js","components/index.js","App.js","serviceWorker.js","index.js","config.js"],"names":["state","name","desc","changeHandler","target","setState","value","submitHandler","event","preventDefault","data","console","log","props","addOrUpdate","_id","curList","closeButton","close","this","onSubmit","type","id","onChange","required","onClick","React","Component","list_id","due","curItem","customStyles","content","top","left","right","bottom","marginRight","transform","listOrItem","closeModal","displaySymbol","modalIsOpen","openModal","bind","className","isOpen","style","ariaHideApp","addIdToBody","newBody","list","updateList","lists","map","index","key","selectList","deleteList","addList","item","updateItem","toggleComplete","newData","isComplete","deleteItem","filter","val","items","addItem","fetchLists","fetch","API_URL","then","response","json","catch","err","fetchItems","newList","method","body","JSON","stringify","headers","newItem","listToDelete","window","confirm","itemToDelete","listToUpdate","itemToUpdate","itemToToggle","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.8443a0e2.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default class extends React.Component {\r\n\r\n    state = {\r\n        name: '',\r\n        desc: '',\r\n    }\r\n\r\n    changeHandler = ({ target }) => {\r\n        this.setState({\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n\r\n    submitHandler = (event) => {\r\n        event.preventDefault()\r\n        let data = { ...this.state }\r\n        console.log(\"form submitHandler called! data:\", data)\r\n        if (!this.props.addOrUpdate) {\r\n            data = { _id: this.props.curList._id, ...data }\r\n        }\r\n        this.props.submitHandler(data)\r\n        this.props.closeButton()\r\n    }\r\n\r\n    close = () => {\r\n        this.props.closeButton()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>{this.props.addOrUpdate === true ? 'Add' : 'Update'} List:</h2>\r\n                <form onSubmit={this.submitHandler}>\r\n                    <label>Name:</label>\r\n                    <input\r\n                        type='text'\r\n                        id='name'\r\n                        name='name'\r\n                        onChange={this.changeHandler}\r\n                        value={this.addOrUpdate ? this.state.name : this.props.curList.name}\r\n                        required />\r\n                    <label>Description:</label>\r\n                    <input\r\n                        type='text'\r\n                        id='desc'\r\n                        name='desc'\r\n                        onChange={this.changeHandler}\r\n                        value={this.addOrUpdate ? this.state.desc : this.props.curList.desc}\r\n                    />\r\n                    <button>{this.props.addOrUpdate === true ? 'Add' : 'Update'}</button>\r\n                    <button type=\"button\" onClick={this.close}>Close</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\nexport default class extends React.Component {\r\n\r\n    state = {\r\n        name: '',\r\n        list_id: '',\r\n        desc: '',\r\n        due: '',\r\n    }\r\n\r\n    changeHandler = ({ target }) => {\r\n        this.setState({\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n\r\n    submitHandler = (event) => {\r\n        event.preventDefault()\r\n        const data = { ...this.state }\r\n        this.props.submitHandler(data)\r\n        this.props.closeButton()\r\n    }\r\n\r\n    close = () => {\r\n        this.props.closeButton()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>{this.props.addOrUpdate === true ? 'Add' : 'Update'} Item:</h2>\r\n                <form onSubmit={this.submitHandler}>\r\n                    <label>Name:</label>\r\n                    <input\r\n                        type='text'\r\n                        id='name'\r\n                        name='name'\r\n                        onChange={this.changeHandler}\r\n                        value={this.addOrUpdate ? this.state.name : this.props.curItem.name}\r\n                        required />\r\n                    <label>Description:</label>\r\n                    <input\r\n                        type='text'\r\n                        id='desc'\r\n                        name='desc'\r\n                        onChange={this.changeHandler}\r\n                        value={this.addOrUpdate ? this.state.desc : this.props.curItem.desc}\r\n                    />\r\n                    <label>Due:</label>\r\n                    <input\r\n                        type='text'\r\n                        id='due'\r\n                        name='due'\r\n                        onChange={this.changeHandler}\r\n                        value={this.addOrUpdate ? this.state.due : this.props.curItem.due}\r\n                    />\r\n                    <input type='hidden' id='isComplete' name='isComplete' value='false'></input>\r\n                    <button>{this.props.addOrUpdate === true ? 'Add' : 'Update'}</button>\r\n                    <button type='button' onClick={this.close}>Close</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n// import ReactDOM from 'react-dom';\r\nimport Modal from 'react-modal';\r\nimport ListForm from './ListForm';\r\nimport ItemForm from './ItemForm';\r\nimport { FaPencilAlt, FaPlus } from 'react-icons/fa';\r\n\r\nconst customStyles = {\r\n  content: {\r\n    top: '50%',\r\n    left: '50%',\r\n    right: 'auto',\r\n    bottom: 'auto',\r\n    marginRight: '-50%',\r\n    transform: 'translate(-50%, -50%)'\r\n  }\r\n};\r\n\r\n// Make sure to bind modal to your appElement (http://reactcommunity.org/react-modal/accessibility/)\r\n// Modal.setAppElement(el)\r\n\r\n\r\nexport default class extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      modalIsOpen: false\r\n    };\r\n\r\n    this.openModal = this.openModal.bind(this);\r\n    this.closeModal = this.closeModal.bind(this);\r\n  }\r\n\r\n  openModal() {\r\n    this.setState({ modalIsOpen: true });\r\n  }\r\n\r\n  closeModal() {\r\n    this.setState({ modalIsOpen: false });\r\n  }\r\n\r\n  listOrItem = () => {\r\n    if (this.props.listOrItem) {\r\n      return (<ListForm submitHandler={this.props.submitHandler} closeButton={this.closeModal} addOrUpdate={this.props.addOrUpdate} curList={this.props.curList} />)\r\n    }\r\n    else {\r\n      return (<ItemForm submitHandler={this.props.submitHandler} closeButton={this.closeModal} addOrUpdate={this.props.addOrUpdate} curItem={this.props.curItem} />)\r\n    }\r\n  }\r\n\r\n  displaySymbol = (addOrUpdate) => {\r\n    if (addOrUpdate) { return <FaPlus /> }\r\n    return <FaPencilAlt />\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button className={this.props.addOrUpdate ? 'buttonAdd' : 'buttonUpdate'} onClick={this.openModal}>\r\n          {this.displaySymbol(this.props.addOrUpdate)}\r\n        </button>\r\n        <Modal isOpen={this.state.modalIsOpen} style={customStyles} ariaHideApp={false}>\r\n          {this.listOrItem()}\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react'\r\nimport Modal from './Modal'\r\n// import '../node_modules/font-awesome/css/font-awesome.min.css'\r\n// import { FontAwesomeIcon, FaTrash } from '@fortawesome/react-fontawesome'\r\nimport { FaTimes } from 'react-icons/fa'\r\n\r\nexport default class extends React.Component {\r\n\r\n    addIdToBody = (data) => {\r\n        const newBody = { _id: this.props.list._id, ...data }\r\n        this.props.updateList(newBody)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"lists\">\r\n                <h1>Todo Lists</h1>\r\n                {this.props.lists.map((list, index) => {\r\n                    return (\r\n                        <div className=\"listSelect\" key={index}>\r\n                            <button onClick={() => this.props.selectList(list._id)}>\r\n                                <div>{list.name}</div>\r\n                                {/* <div>{list.desc}</div> */}\r\n                            </button>\r\n                            <Modal submitHandler={this.props.updateList} listOrItem={true} addOrUpdate={false} curList={list} />\r\n                            <button className=\"buttonDelete\" onClick={() => this.props.deleteList(list)}>\r\n                                <FaTimes />\r\n                            </button>\r\n                        </div>\r\n                    )\r\n                })}\r\n                <Modal submitHandler={this.props.addList} listOrItem={true} addOrUpdate={true} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport Modal from './Modal'\r\nimport { FaTimes, FaCheck } from 'react-icons/fa'\r\n\r\nexport default class extends React.Component {\r\n\r\n    addIdToBody = (data) => {\r\n        const newBody = { _id: this.props.item._id, ...data }\r\n        this.props.updateItem(newBody)\r\n    }\r\n\r\n    toggleComplete = (data) => {\r\n        const item = this.props.item\r\n        const newData = {\r\n            _id: item._id,\r\n            name: item.name,\r\n            desc: item.desc,\r\n            due: item.due,\r\n            isComplete: !item.isComplete\r\n        }\r\n        this.props.toggleComplete(newData)\r\n    }\r\n\r\n    render() {\r\n        const item = this.props.item\r\n        return (\r\n            <div className=\"item\" key={item._id}>\r\n                <div className=\"itemName\">{item.isComplete ? <strike>{item.name}</strike> : item.name}</div>\r\n                {/* <div>{this.props.item.desc}</div>\r\n                <div>{this.props.item.due}</div> */}\r\n                <button className=\"buttonCheck\" onClick={this.toggleComplete}><FaCheck /></button>\r\n                <Modal submitHandler={this.addIdToBody} listOrItem={false} addOrUpdate={false} curItem={item}/>\r\n                <button className=\"buttonDelete\" onClick={this.props.deleteItem}><FaTimes /></button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport Item from './Item'\r\n// import ItemForm from './ItemForm'\r\nimport Modal from './Modal'\r\n\r\n\r\nexport default class extends React.Component {\r\n    // listOrItem = 'item'\r\n    render() {\r\n        if (this.props.state.list_id === \"\") return (<div></div>);\r\n        return (\r\n            <div className=\"listDisplay\">\r\n                {/*List Title*/}\r\n                {this.props.state.lists.filter(val => val._id === this.props.state.list_id)\r\n                    .map(val => <h1 key={val._id}>{val.name}</h1>)}\r\n                {/*List Description*/}\r\n                {this.props.state.lists.filter(val => val._id === this.props.state.list_id)\r\n                    .map(val => <h2 key={val._id}>{val.desc}</h2>)}\r\n\r\n                {/*List Items*/}\r\n                {this.props.state.items.filter(val => val.list_id === this.props.state.list_id)\r\n                    .map(item => <Item key={item._id} item={item} deleteItem={this.props.deleteItem} updateItem={this.props.updateItem} toggleComplete={this.props.toggleComplete}/>)}\r\n\r\n                {/*Add Items*/}\r\n                <Modal submitHandler={this.props.addItem} listOrItem={false} addOrUpdate={true} />\r\n                {/* <ItemForm submitHandler={this.props.addItem}/> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport Lists from './Lists'\r\nimport List from './List'\r\nimport { API_URL } from '../config'\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        lists: [],\r\n        list_id: \"\",\r\n        items: [],\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchLists()\r\n        this.fetchItems()\r\n    }\r\n\r\n    selectList = (list_id) => {\r\n        console.log(\"selectList called\")\r\n        this.setState({ list_id })\r\n    }\r\n\r\n    fetchLists = () => {\r\n        console.log('fetchLists called!')\r\n        fetch(`${API_URL}/lists`)\r\n            .then(response => response.json())\r\n            .then(lists => {\r\n                this.setState({ lists })\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    fetchItems = () => {\r\n        console.log('fetchItems called!')\r\n        fetch(`${API_URL}/items`)\r\n            .then(response => response.json())\r\n            .then(items => {\r\n                this.setState({ items })\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    addList = (newList) => {\r\n        console.log('addList called')\r\n        fetch(`${API_URL}/lists`, {\r\n            method: 'post',\r\n            body: JSON.stringify(newList),\r\n            headers: { 'Content-Type': 'application/json' }\r\n        })\r\n            .then(response => response.json())\r\n            .catch(err => console.log(err))\r\n            .then(response => {\r\n                console.log(response)\r\n                this.fetchLists()\r\n            })\r\n    }\r\n\r\n    addItem = (newItem) => {\r\n        newItem.list_id = this.state.list_id\r\n        console.log('addList called. newItem:', newItem)\r\n        fetch(`${API_URL}/items`, {\r\n            method: 'post',\r\n            body: JSON.stringify(newItem),\r\n            headers: { 'Content-Type': 'application/json' }\r\n        })\r\n            .then(response => response.json())\r\n            .catch(err => console.log(err))\r\n            .then(response => {\r\n                console.log(response)\r\n                this.fetchItems()\r\n            })\r\n    }\r\n\r\n\r\n    deleteList = (listToDelete) => {\r\n        console.log('delete list called!', listToDelete)\r\n        if (window.confirm(`Are you sure you want to delete ${listToDelete.name}?`)) {\r\n            fetch(`${API_URL}/lists`, {\r\n                method: 'delete',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ _id: listToDelete._id })\r\n            })\r\n                .catch(err => console.log(err))\r\n                .then(response => {\r\n                    console.log(response)\r\n                    this.fetchLists()\r\n                    this.fetchItems()\r\n                    this.setState({ list_id: '' })\r\n                })\r\n        }\r\n    }\r\n\r\n    deleteItem = (itemToDelete) => {\r\n        console.log('delete item called!', itemToDelete)\r\n        if (window.confirm(`Are you sure you want to delete ${itemToDelete.name}?`)) {\r\n            fetch(`${API_URL}/items`, {\r\n                method: 'delete',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ _id: itemToDelete._id })\r\n            })\r\n                .catch(err => console.log(err))\r\n                .then(response => {\r\n                    console.log(response)\r\n                    this.fetchLists()\r\n                    this.fetchItems()\r\n                })\r\n        }\r\n    }\r\n\r\n    updateList = (listToUpdate) => {\r\n        console.log('update list called!', listToUpdate)\r\n        fetch(`${API_URL}/lists`, {\r\n            method: 'put',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(listToUpdate)\r\n        })\r\n            .catch(err => console.log(err))\r\n            .then(response => {\r\n                console.log(response)\r\n                this.fetchLists()\r\n                this.fetchItems()\r\n                this.setState({ list_id: '' })\r\n            })\r\n    }\r\n\r\n    updateItem = (itemToUpdate) => {\r\n        console.log('update item called!', itemToUpdate)\r\n        fetch(`${API_URL}/items`, {\r\n            method: 'put',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(itemToUpdate)\r\n        })\r\n            .catch(err => console.log(err))\r\n            .then(response => {\r\n                console.log(response)\r\n                this.fetchLists()\r\n                this.fetchItems()\r\n                this.setState({ list_id: '' })\r\n            })\r\n    }\r\n\r\n    toggleComplete = (itemToToggle) => {\r\n        this.updateItem(itemToToggle)\r\n    }\r\n\r\n\r\n    render() {\r\n        console.log(\"render state: \", this.state)\r\n        return (\r\n            <div className=\"index\">\r\n                <Lists lists={this.state.lists}\r\n                    selectList={this.selectList}\r\n                    addList={this.addList}\r\n                    deleteList={this.deleteList}\r\n                    updateList={this.updateList} />\r\n\r\n                <List state={this.state} addItem={this.addItem} deleteItem={this.deleteItem} updateItem={this.updateItem} toggleComplete={this.toggleComplete}/>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport Main from './components'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// Development\r\nconst API_URL = \"http://localhost:4001\"\r\n// const API_URL = \"https://todo-server.vandyand.now.sh\"\r\n\r\n\r\n\r\nmodule.exports = {\r\n    API_URL\r\n}\r\n"],"sourceRoot":""}